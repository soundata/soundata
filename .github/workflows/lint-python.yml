name: Linting

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: "Lint and code analysis"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            python-version: "3.12"

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      run: pip install poetry

    - name: Cache Poetry virtualenv
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/pypoetry/virtualenvs
          .venv
        key: ${{ runner.os }}-py${{ matrix.python-version }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-py${{ matrix.python-version }}-poetry-
    - name: Install dependencies
      run: |
          poetry config virtualenvs.in-project true
          poetry install --only=linting
    
    - name: (flake8) Style check
      shell: bash -l {0}
      run: poetry run python -m flake8 soundata --count --select=E9,F63,F7,F82 --show-source --statistics
      # Info about error codes: https://pycodestyle.pycqa.org/en/latest/intro.html#error-codes
      # and https://flake8.pycqa.org/en/latest/user/error-codes.html

    - name: (mypy) Type check package
      shell: bash -l {0}
      run: poetry run python -m mypy soundata --ignore-missing-imports --allow-subclassing-any